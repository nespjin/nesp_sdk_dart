name: password_manager

packages:
  - "packages/*"
  - "packages/*/*"
  - "packages/*/*/*"

ignore:
  - "packages/**/example"
  - "packages/nesp_sdk_flutter_old"

scripts:
  publish:
    run: |
      melos exec -c 1 -- flutter pub publish --server https://pub.dev -f 
    description: Publish all packages to pub.dev.
    
  update-sdk-version:
    run: |
      melos exec -c 6 -- \
        python $MELOS_ROOT_PATH/tools/scripts/update-sdk-version.py 
    description: Update the SDK version in all packages.

  lint:all:
    run: melos run analyze && melos run format
    description: Run all static analysis checks.

  analyze:
    # We are setting the concurrency to 1 because a higher concurrency can crash
    # the analysis server on low performance machines (like GitHub Actions).
    run: |
      melos exec -c 1 -- \
        dart analyze . --fatal-infos
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  format:
    run: |
      dart pub global run flutter_plugin_tools format
    description: |
      Build a specific app for Android.
       - Requires `flutter_plugin_tools` (`dart pub global activate flutter_plugin_tools`).

  clean:deep:
    run: git clean -x -d -f -q
    description: Clean things very deeply, can be used to establish "pristine checkout" status.

  qualitycheck:
    run: |
      melos run clean:deep && \
      melos clean && \
      melos bootstrap && \
      melos run lint:all && \
      melos run test:all
    description: Run all targets generally expected in CI for a full local quality check.

  test:all:
    run: |
      melos run test --no-select
    description: |
      Run all tests available.
 
  # Additional cleanup lifecycle script, executed when `melos clean` is run.
  postclean: >
    melos exec -c 6 -- "flutter clean"

  builder:
    run: |
      melos exec -c 1  --  "flutter pub run build_runner build --delete-conflicting-outputs"
      
  add-license-header:
    # If you add here another --ignore flag, add it also to
    # "check-license-header".
    run: |
      addlicense -f header_template.txt \
        --ignore "**/*.yml" \
        --ignore "**/*.yaml" \
        --ignore "**/*.xml" \
        --ignore "**/*.g.dart" \
        --ignore "**/*.sh" \
        --ignore "**/*.html" \
        --ignore "**/*.js" \
        --ignore "**/*.ts" \
        --ignore "**/*.g.h" \
        --ignore "**/*.g.m" \
        --ignore "**/*.rb" \
        --ignore "**/*.txt" \
        --ignore "**/*.cmake" \
        --ignore "**/Runner/AppDelegate.swift" \
        --ignore "**/Runner/MainFlutterWindow.swift" \
        --ignore "**/Runner/Runner-Bridging-Header.h" \
        --ignore "**/Runner/AppDelegate.h" \
        --ignore "**/Runner/AppDelegate.m" \
        --ignore "**/Runner/main.m" \
        --ignore "**/MainActivity.kt" \
        --ignore "**/MainActivity.java" \
        --ignore "**/FlutterMultiDexApplication.java" \
        --ignore "**/GeneratedPluginRegistrant.swift" \
        --ignore "**/Pods/**" \
        --ignore "**/flutter/generated_plugin_registrant.h" \
        --ignore "**/flutter/generated_plugin_registrant.cc" \
        .
    description: Add a license header to all necessary files.

  check-license-header:
    # If you add here another --ignore flag, add it also to
    # "add-license-header".
    run: |
      addlicense -f header_template.txt \
        --check \
        --ignore "**/*.yml" \
        --ignore "**/*.yaml" \
        --ignore "**/*.xml" \
        --ignore "**/*.g.dart" \
        --ignore "**/*.sh" \
        --ignore "**/*.html" \
        --ignore "**/*.js" \
        --ignore "**/*.ts" \
        --ignore "**/*.g.h" \
        --ignore "**/*.g.m" \
        --ignore "**/*.rb" \
        --ignore "**/*.txt" \
        --ignore "**/*.cmake" \
        --ignore "**/Runner/AppDelegate.swift" \
        --ignore "**/Runner/MainFlutterWindow.swift" \
        --ignore "**/Runner/Runner-Bridging-Header.h" \
        --ignore "**/Runner/AppDelegate.h" \
        --ignore "**/Runner/AppDelegate.m" \
        --ignore "**/Runner/main.m" \
        --ignore "**/MainActivity.kt" \
        --ignore "**/MainActivity.java" \
        --ignore "**/FlutterMultiDexApplication.java" \
        --ignore "**/GeneratedPluginRegistrant.swift" \
        --ignore "**/Pods/**" \
        --ignore "**/flutter/generated_plugin_registrant.*" \
        --ignore "**/example/windows/**/*" \
        .
    description: Add a license header to all necessary files.